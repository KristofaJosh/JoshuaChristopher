{"version":3,"sources":["Compositions/templates/index.jsx","Components/constants/constants.jsx","Components/constants/index.jsx","Components/atoms/button/index.jsx","Components/molecules/socials.jsx","Components/organism/navbar.jsx","Components/molecules/menu.jsx","Components/atoms/logo.jsx","Components/organism/footerdiv.jsx","App.js","serviceWorker.js","index.js","Components/atoms/typography/index.jsx"],"names":["Body","props","BodyStyle","className","children","Footer","FooterStyle","Inner","InnerStyle","align","InnerLeft","InnerStyleLeft","InnerRight","InnerStyleRight","Content","ContentStyle","styled","div","backgroundColor","textColor","footerBackgroundColor","footerTextColor","propTypes","variant","PropTypes","oneOf","defaultProps","TextSize","Color","theme","variants","default","light","dark","primary","card","footer","logo","buttonBackground","secondary","buttonText","buttonBorder","hover","fontSize","big","med","sm","xsm","element","Button","link","ButtonStyle","onClick","fn","href","button","Socials","SocialStyle","map","el","key","size","name","toLowerCase","NavBar","NavBarStyle","text","Menu","MenuStyle","exact","activeClassName","to","Logo","LogoStyle","span","FooterDiv","year","Date","getFullYear","FooterDivStyle","All","lazy","About","Works","Contacts","Home","React","App","useState","mode","setMode","data","setData","changeMode","useEffect","API","get","then","res","console","log","results","catch","err","fallback","role","path","component","api","changeTheme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","Text","TextStyle","p","weight"],"mappings":"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","file":"static/js/main.4d6c7ab9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport {backgroundColor, footerBackgroundColor, textColor, footerTextColor} from '../../Components/constants'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport function Body(props) {\r\n    return (\r\n        <BodyStyle {...props}>\r\n            <div className=\"container \">\r\n                {props.children}\r\n            </div>\r\n        </BodyStyle>\r\n    );\r\n}\r\n\r\nexport function Footer(props) {\r\n    return (\r\n        <FooterStyle {...props}>\r\n            <div className=\"container\">\r\n                {props.children}\r\n            </div>\r\n        </FooterStyle>\r\n    )\r\n}\r\n\r\nexport function Inner(props) {\r\n    return (\r\n        <InnerStyle align={props.align}>{props.children}</InnerStyle>\r\n    )\r\n}\r\n\r\nexport function InnerLeft(props) {\r\n    return (\r\n        <InnerStyleLeft>{props.children}</InnerStyleLeft>\r\n    )\r\n}\r\nexport function InnerRight(props) {\r\n    return (\r\n        <InnerStyleRight>{props.children}</InnerStyleRight>\r\n    )\r\n}\r\n\r\nexport function Content(props) {\r\n\r\n    return (\r\n        <ContentStyle>\r\n            {props.children}\r\n        </ContentStyle>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst BodyStyle = styled.div`\r\n        display: flex;\r\n        justify-content: center;\r\n        flex: 1;\r\n        background-color: ${backgroundColor};\r\n        color: ${textColor};\r\n    \r\n`;\r\n\r\nconst FooterStyle = styled.div`\r\n    background-color: ${footerBackgroundColor};\r\n    color: ${footerTextColor};\r\n`;\r\n\r\nconst ContentStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    @media (max-width: 900px){\r\n        flex-direction: column;\r\n        align-items: center;\r\n  }\r\n`;\r\n\r\nconst InnerStyle = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin: 1rem 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    \r\n    // @media (min-width 1200px){\r\n    //     display: flex;\r\n    // }\r\n`;\r\n\r\nconst InnerStyleLeft = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin: 1rem 0;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    \r\n    // @media (min-width 1200px){\r\n    //     display: flex;\r\n    // }\r\n`;\r\nconst InnerStyleRight = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin: 1rem 0;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    \r\n    // @media (min-width 1200px){\r\n    //     display: flex;\r\n    // }\r\n`;\r\n\r\nBodyStyle.propTypes = {\r\n    variant: PropTypes.oneOf(['default', 'primary', 'secondary'])\r\n};\r\n\r\nBodyStyle.defaultProps = {\r\n    variant: 'default',\r\n};\r\n\r\nFooterStyle.propTypes = {\r\n    variant: PropTypes.oneOf(['default', 'primary', 'secondary'])\r\n};\r\n\r\nFooterStyle.defaultProps = {\r\n    variant: 'default',\r\n};\r\n\r\n\r\n\r\n","export const TextSize = {\r\n    BIG: '3.5rem',\r\n    MEDIUM: '2rem',\r\n    NORMAL: '1.2rem',\r\n    SMALL: '1rem',\r\n    X_SMALL: '0.8rem',\r\n};\r\n\r\nexport const Color = {\r\n    GREEN: \"#33ffa9\",\r\n    WHITE: \"#fff\",\r\n    GREY: \"#828181\",\r\n    NAVY: \"#23272d\",\r\n    DEFAULT: \"#000\",\r\n    CARDGREY: \"#4d49490f\",\r\n    CARDNAVY: \"#1c2026b5\",\r\n};\r\n\r\n\r\n","import theme from 'styled-theming';\r\nimport {Color, TextSize} from './constants';\r\n\r\nexport const backgroundColor = theme.variants('mode', 'variant', {\r\n    default: {light: Color.WHITE, dark: Color.NAVY},\r\n    primary: {light: Color.WHITE, dark: Color.NAVY},\r\n    card: {light: Color.CARDGREY, dark: Color.CARDNAVY},\r\n});\r\n\r\nexport const footerBackgroundColor = theme.variants('mode', 'variant', {\r\n    default: {light: Color.NAVY, dark: Color.GREEN},\r\n    primary: {light: Color.NAVY, dark: Color.GREEN},\r\n});\r\n\r\nexport const textColor = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.NAVY, dark: Color.WHITE},\r\n    primary: {light: Color.NAVY, dark: Color.WHITE},\r\n    footer: {light: Color.WHITE, dark: Color.NAVY},\r\n    logo: {light: Color.NAVY, dark: Color.GREEN},\r\n});\r\n\r\nexport const footerTextColor = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.WHITE, dark: Color.NAVY},\r\n    primary: {light: Color.WHITE, dark: Color.NAVY},\r\n});\r\n\r\nexport const buttonBackground = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.DEFAULT, dark: Color.WHITE},\r\n    primary: {light: Color.DEFAULT, dark: Color.WHITE},\r\n    secondary: {light: Color.WHITE, dark: Color.GREEN},\r\n});\r\n\r\nexport const buttonText = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.WHITE, dark: Color.NAVY},\r\n    primary: {light: Color.WHITE, dark: Color.NAVY},\r\n    secondary: {light: Color.NAVY, dark: Color.NAVY},\r\n});\r\n\r\nexport const buttonBorder = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.WHITE, dark: Color.NAVY},\r\n    primary: {light: Color.WHITE, dark: Color.NAVY},\r\n    secondary: {light: Color.NAVY, dark: Color.NAVY},\r\n});\r\n\r\n\r\nexport const hover = theme.variants(\"mode\", \"variant\", {\r\n    default: {light: Color.NAVY, dark: Color.GREEN},\r\n    primary: {light: Color.NAVY, dark: Color.GREEN},\r\n    secondary: {light: Color.WHITE, dark: Color.GREEN},\r\n});\r\n\r\n\r\nexport const fontSize = theme.variants('mode', 'size', {\r\n    default: {light: TextSize.NORMAL, dark: TextSize.NORMAL,},\r\n    big: {light: TextSize.BIG, dark: TextSize.BIG,},\r\n    med: {light: TextSize.MEDIUM, dark: TextSize.MEDIUM,},\r\n    sm: {light: TextSize.SMALL, dark: TextSize.SMALL,},\r\n    xsm: {light: TextSize.X_SMALL, dark: TextSize.X_SMALL,},\r\n    logo: {light: TextSize.NORMAL, dark: TextSize.NORMAL},\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Text from '../typography';\r\nimport PropTypes from 'prop-types';\r\nimport {buttonText, buttonBackground, hover, buttonBorder} from '../../constants';\r\n\r\n\r\nlet element = '';\r\n\r\nexport default function Button(props) {\r\n    if (props.link) {\r\n\r\n        element =\r\n            <>\r\n                <ButtonStyle variant={props.variant} onClick={props.fn}>\r\n                    <a href=\"tel:+2348166870575\"><Text>{props.children}\r\n                        <span> /&gt;</span></Text></a>\r\n                </ButtonStyle>\r\n            </>\r\n\r\n    } else {\r\n        element =\r\n        <>\r\n            <ButtonStyle variant={props.variant} onClick={props.fn}>\r\n                <Text>{props.children}<span> /&gt;</span></Text>\r\n            </ButtonStyle>\r\n        </>\r\n    }\r\n    return (\r\n        <>{element}</>\r\n    );\r\n}\r\n\r\nconst ButtonStyle = styled.button`\r\n  background-color: ${buttonBackground};\r\n  color: ${buttonText};\r\n  border: 2px solid ${buttonBorder};\r\n  border-radius: 5.3px;\r\n  padding: 0.5rem;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n  \r\n  a {   color: ${buttonText};}\r\n  \r\n  &:hover {\r\n    background-color: ${hover};\r\n  }\r\n`;\r\n\r\nButtonStyle.propTypes = {\r\n    variant: PropTypes.oneOf(['default', 'primary', 'secondary'])\r\n};\r\n\r\nButtonStyle.defaultProps = {\r\n    variant: 'default',\r\n};\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Text from \"../atoms/typography\";\r\nimport {fontSize, hover, textColor} from \"../constants\";\r\n\r\nexport default function Socials(props) {\r\n    const links = [\r\n        [\"Github\", \"https://github.com/KristofaJosh/\"],\r\n        [\"LinkedIn\", \"https://www.linkedin.com/in/christofajosh\"],\r\n        [\"Facebook\", \"https://www.facebook.com/christofajosh/\"],\r\n        [\"Skype\", \"skype:christofajosh?call\"],\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <SocialStyle {...props}>\r\n                {links.map(el => (\r\n                  <a href={el[1]} key={el}>\r\n                    <Text size={'xsm'}>\r\n                        <ion-icon name={\"logo-\"+ el[0].toLowerCase()}/>\r\n                        {\"  \" + el[0]}\r\n                    </Text>\r\n                  </a>\r\n                ))}\r\n            </SocialStyle>\r\n        </>\r\n    );\r\n}\r\n\r\nconst SocialStyle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 1rem 0;\r\n  font-size: ${fontSize};\r\n  \r\n  a {\r\n    color: ${textColor} !important;\r\n  }\r\n  \r\n  &:hover {color: ${hover};}  \r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Menu from \"../molecules/menu\";\r\nimport Logo from \"../atoms/logo\";\r\n\r\nexport default function NavBar() {\r\n    let name = 'Joshua Enyi-Christopher';\r\n    return (\r\n        <NavBarStyle>\r\n            <Logo variant={'logo'} size={'big'} text={name}/>\r\n            <Menu variant={'default'}/>\r\n        </NavBarStyle>\r\n    )\r\n}\r\n\r\nconst NavBarStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 1.5rem 0;\r\n    \r\n    @media (max-width: 900px){\r\n        flex-direction: column;        \r\n    }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {textColor, hover} from \"../constants\";\r\nimport Text from \"../atoms/typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../atoms/button\";\r\n\r\n\r\nexport default function Menu(props) {\r\n\r\n    const paths = [\"Home\", \"About\", \"Works\", \"Contacts\"];\r\n\r\n    return (\r\n        <MenuStyle {...props}>\r\n            {paths.map(el => (\r\n                <NavLink exact activeClassName='active'\r\n                         to={'/' + el}\r\n                         key={el}\r\n                ><Text size={'sm'}>{el}</Text>\r\n                </NavLink>\r\n            ))}\r\n            <Button variant={'primary'}>brief me</Button>\r\n\r\n        </MenuStyle>\r\n    )\r\n\r\n}\r\n\r\nconst MenuStyle = styled.div`\r\n    width: 50%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    \r\n    @media (max-width: 900px){\r\n        width: 100%;        \r\n    }\r\n}\r\n    \r\n    a {\r\n        color: ${textColor} !important;\r\n    }\r\n\r\n    .active {\r\n        color: ${hover} !important;\r\n    }\r\n    \r\n    p {\r\n        display: inline;\r\n    }\r\n    \r\n    .active::before {\r\n        content: '< '\r\n    }\r\n    .active::after {\r\n        content: ' />'\r\n    }\r\n\r\n    &:hover {\r\n        color: ${hover} !important;\r\n    }\r\n`;\r\n\r\nMenuStyle.propTypes = {\r\n    variant: PropTypes.oneOf(['default', 'big', 'med', 'small', 'xsm'])\r\n};\r\n\r\nMenuStyle.defaultProps = {\r\n    variant: 'default',\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {textColor} from \"../constants\";\r\nimport Text from '../atoms/typography';\r\n\r\n\r\nexport default function Logo(props) {\r\n    return (\r\n        <>\r\n            <Text size={'med'}><LogoStyle {...props}><span>&lt;/</span></LogoStyle>{props.text}</Text>\r\n        </>\r\n    )\r\n}\r\n\r\nconst LogoStyle = styled.span`\r\n    color: ${textColor};\r\n    font-weight: 700;\r\n    span {\r\n        font-size: 2.1rem;\r\n     }\r\n`;","import React from \"react\";\r\nimport {Content, InnerLeft, InnerRight} from \"../../Compositions/templates\";\r\nimport Socials from \"../molecules/socials\";\r\nimport Text from \"../atoms/typography\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function FooterDiv(props) {\r\n\r\n    let year = new Date();\r\n    year = year.getFullYear();\r\n\r\n    return (\r\n        <FooterDivStyle>\r\n            <Content>\r\n                <InnerLeft>\r\n                <Text size={'med'}>I'm available for freelance<br/>you can reach me by</Text>\r\n                </InnerLeft>\r\n            </Content>\r\n            <Content>\r\n                <InnerLeft><Socials variant={'footer'} /></InnerLeft>\r\n                <InnerRight className='copyright'><Text size='xsm'>{year} - All rights reserved - TheChristophers</Text></InnerRight>\r\n            </Content>\r\n            <Content>\r\n            </Content>\r\n        </FooterDivStyle>\r\n    )\r\n\r\n}\r\n\r\nconst FooterDivStyle = styled.div`\r\n    margin: 2.5rem 0;\r\n    \r\n    .copyright {\r\n        background-color: red !important;\r\n    }\r\n`;","import React, {Suspense, lazy, useState, useEffect} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport {Body, Footer} from './Compositions/templates/index';\nimport NavBar from \"./Components/organism/navbar\";\n\nimport './App.css';\nimport FooterDiv from \"./Components/organism/footerdiv\";\nimport API from 'axios'\n\nconst All = lazy(() => import('./Components/allelement'));\nconst About = lazy(() => import('./Compositions/pages/about'));\nconst Works = lazy(() => import('./Compositions/pages/jobs'));\nconst Contacts = lazy(() => import('./Compositions/pages/contact'));\nconst Home = React.lazy(() => import('./Compositions/pages/home'));\n\n\nfunction App() {\n    const [mode, setMode] = useState('dark');\n    const [data, setData] = useState(['']);\n\n    function changeMode() {\n        mode === 'light' ? setMode('dark') : setMode('light')\n    }\n\n    useEffect(()=>{\n        API.get('https://rickandmortyapi.com/api/character/')\n            .then(res=>{\n                console.log(res.data.results);\n                setData(res.data.results)\n            }).catch(err=>{console.log(err)})\n    }, []);\n\n\n    return (\n        <>\n            <ThemeProvider theme={{mode: mode}}>\n                <Body variant={'default'}>\n                    <BrowserRouter>\n                            <Suspense fallback={\n                                <div className=\"d-flex justify-content-center align-items-center\">\n                                    <div className=\"spinner-border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            }>\n                                <NavBar/>\n                                <Switch>\n                                    <Route path=\"/all\" component={All}/>\n                                    <Route path=\"/about\" component={About}/>\n                                    <Route path=\"/works\" component={(props) => <Works {...props} api={data}/>}/>\n                                    <Route path=\"/contacts\" component={Contacts}/>\n                                    <Route path=\"/home\"\n                                           component={(props) => <Home {...props} changeTheme={changeMode}/>}/>\n                                    <Route path=\"/\" component={(props) => <Home {...props} changeTheme={changeMode}/>}/>\n                                </Switch>\n                            </Suspense>\n                    </BrowserRouter>\n                </Body>\n                <Footer>\n                    <FooterDiv/>\n                </Footer>\n            </ThemeProvider>\n        </>\n    );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types'\r\nimport {fontSize} from \"../../constants\";\r\n\r\nexport default function Text(props) {\r\n    return (\r\n        <TextStyle {...props}>{props.children}</TextStyle>\r\n    );\r\n}\r\n\r\nconst TextStyle = styled.p`\r\n    font-size: ${fontSize};\r\n    font-weight: ${props=> props.weight || '0'};\r\n`;\r\n\r\nTextStyle.propTypes = {\r\n    variant: PropTypes.oneOf(['default', 'big', 'med', 'small', 'xsm'])\r\n};\r\n\r\nTextStyle.defaultProps = {\r\n    variant: 'default',\r\n};\r\n\r\n"],"sourceRoot":""}